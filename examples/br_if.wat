(module
  (func $dummy)
  (func (export "as-block-first") (result i32)
    (block (br_if 0 (i32.const 1)) (return (i32.const 2))) (i32.const 3)
  )
  (func (export "as-block-mid") (result i32)
    (block (call $dummy) (br_if 0 (i32.const 1)) (return (i32.const 2)))
    (i32.const 3)
  )
  (func (export "as-block-last") 
    (block (call $dummy) (call $dummy) (br_if 0 (i32.const 0)))
  )
  (func (export "as-block-first-value") (result i32)
    (block (result i32)
      (drop (br_if 0 (i32.const 10) (i32.const 0))) (return (i32.const 11))
    )
  )
  (func (export "as-block-mid-value") (result i32)
    (block (result i32)
      (call $dummy)
      (drop (br_if 0 (i32.const 20) (i32.const 0)))
      (return (i32.const 21))
    )
  )
  (func (export "as-block-last-value") (result i32)
    (block (result i32)
      (call $dummy) (call $dummy) (br_if 0 (i32.const 11) (i32.const 0))
    )
  )

  (func (export "as-loop-first") (result i32)
    (block (loop (br_if 1 (i32.const 1)) (return (i32.const 2)))) (i32.const 3)
  )
  (func (export "as-loop-mid") (result i32)
    (block (loop (call $dummy) (br_if 1 (i32.const 0)) (return (i32.const 2))))
    (i32.const 4)
  )
  (func (export "as-loop-last") 
    (loop (call $dummy) (br_if 3 (i32.const 1)))
  )

  (func (export "as-br-value") (result i32)
    (block (result i32) (br 0 (br_if 0 (i32.const 1) (i32.const 2))))
  )

  (func (export "as-br_if-cond")
    (block (br_if 0 (br_if 0 (i32.const 1) (i32.const 1))))
  )
  (func (export "as-br_if-value") (result i32)
    (block (result i32)
      (drop (br_if 0 (br_if 0 (i32.const 1) (i32.const 2)) (i32.const 3)))
      (i32.const 4)
    )
  )
  (func (export "as-br_if-value-cond") (result i32)
    (block (result i32)
      (drop (br_if 0 (i32.const 2) (br_if 0 (i32.const 1) (i32.const 2))))
      (i32.const 4)
    )
  )
  (func (export "as-return-value") (result i32)
    (block (result i32) (return (br_if 0 (i32.const 1) (i32.const 2))))
  )

  (func (export "as-if-cond") (result i32)
    (block (result i32)
      (if (result i32)
        (br_if 0 (i32.const 1) (i32.const 0))
        (then (i32.const 2))
        (else (i32.const 3))
      )
    )
  )
  (func (export "as-if-then") 
    (block
      (if (i32.const 1) (then (br_if 1 (i32.const 2))) (else (call $dummy)))
    )
  )
  (func (export "as-if-else") 
    (block
      (if (i32.const 0) (then (call $dummy)) (else (br_if 1 (i32.const 1))))
    )
  )

  (func (export "as-select-first") (result i32)
    (block (result i32)
      (select (br_if 0 (i32.const 3) (i32.const 10)) (i32.const 2) (i32.const 0))
    )
  )
  (func (export "as-select-second") (result i32)
    (block (result i32)
      (select (i32.const 1) (br_if 0 (i32.const 3) (i32.const 10)) (i32.const 0))
    )
  )
  (func (export "as-select-cond") (result i32)
    (block (result i32)
      (select (i32.const 1) (i32.const 2) (br_if 0 (i32.const 3) (i32.const 10)))
    )
  )
 (func $f (param i32 i32 i32) (result i32) (i32.const -1))
  (func (export "as-call-first") (result i32)
    (block (result i32)
      (call $f
        (br_if 0 (i32.const 12) (i32.const 1)) (i32.const 2) (i32.const 3)
      )
    )
  )
  (func (export "as-call-mid") (result i32)
    (block (result i32)
      (call $f
        (i32.const 1) (br_if 0 (i32.const 13) (i32.const 1)) (i32.const 3)
      )
    )
  )
  (func (export "as-call-last") (result i32)
    (block (result i32)
      (call $f
        (i32.const 1) (i32.const 2) (br_if 0 (i32.const 14) (i32.const 1))
      )
    )
  )
  (func (export "nested-block-value") (result i32)
    (i32.add
      (i32.const 1)
      (block (result i32)
        (drop (i32.const 2))
        (i32.add
          (i32.const 4)
          (block (result i32)
            (drop (br_if 1 (i32.const 8) (i32.const 10)))
            (i32.const 16)
          )
        )
      )
    )
  )

  (func (export "nested-br-value") (result i32)
    (i32.add
      (i32.const 1)
      (block (result i32)
        (drop (i32.const 2))
        (br 0
          (block (result i32)
            (drop (br_if 1 (i32.const 8) (i32.const 10))) (i32.const 4)
          )
        )
        (i32.const 16)
      )
    )
  )

  (func (export "nested-br_if-value") (result i32)
    (i32.add
      (i32.const 1)
      (block (result i32)
        (drop (i32.const 2))
        (drop (br_if 0
          (block (result i32)
            (drop (br_if 1 (i32.const 8) (i32.const 10))) (i32.const 4)
          )
          (i32.const 1)
        ))
        (i32.const 16)
      )
    )
  )

  (func (export "nested-br_if-value-cond") (result i32)
    (i32.add
      (i32.const 1)
      (block (result i32)
        (drop (i32.const 2))
        (drop (br_if 0
          (i32.const 4)
          (block (result i32)
            (drop (br_if 1 (i32.const 8) (i32.const 10))) (i32.const 1)
          )
        ))
        (i32.const 16)
      )
    )
  )
)
