package section

import (
	"testing"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"github.com/terassyi/gowi/types"
)

func TestNewCode(t *testing.T) {
	for _, d := range []struct {
		payload []byte
		sec     *Code
	}{
		{
			payload: []byte{0x01, 0x07, 0x00, 0x20, 0x00, 0x20, 0x01, 0x6a, 0x0b},
			sec: &Code{
				Bodies: []*FunctionBody{
					{
						Locals: []*LocalEntry{},
						Code:   []byte{0x20, 0x00, 0x20, 0x01, 0x6a},
					},
				},
			},
		},
		{
			payload: []byte{0x03,
				0x0f, 0x00, 0x41, 0x00, 0x41, 0x00, 0x2d, 0x00, 0x00, 0x41, 0x01, 0x6a, 0x3a, 0x00, 0x00, 0x0b,
				0x08, 0x00, 0x41, 0x00, 0x2d, 0x00, 0x00, 0x0f, 0x0b,
				0x08, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x0b,
			},
			sec: &Code{
				Bodies: []*FunctionBody{
					{
						Locals: []*LocalEntry{},
						Code:   []byte{0x41, 0x00, 0x41, 0x00, 0x2d, 0x00, 0x00, 0x41, 0x01, 0x6a, 0x3a, 0x00, 0x00},
					},
					{
						Locals: []*LocalEntry{},
						Code:   []byte{0x41, 0x00, 0x2d, 0x00, 0x00, 0x0f},
					},
					{
						Locals: []*LocalEntry{},
						Code:   []byte{0x10, 0x00, 0x10, 0x00, 0x10, 0x00},
					},
				},
			},
		},
		{
			payload: []byte{0x02,
				0x06, 0x01, 0x01, 0x7f, 0x20, 0x00, 0x0b,
				0x06, 0x01, 0x01, 0x7e, 0x20, 0x00, 0x0b,
			},
			sec: &Code{
				Bodies: []*FunctionBody{
					{
						Locals: []*LocalEntry{{Count: uint32(0x01), Type: types.I32}},
						Code:   []byte{0x20, 0x00},
					},
					{
						Locals: []*LocalEntry{{Count: uint32(0x01), Type: types.I64}},
						Code:   []byte{0x20, 0x00},
					},
				},
			},
		},
	} {
		c, err := NewCode(d.payload)
		require.NoError(t, err)
		assert.Equal(t, d.sec, c)
	}
}
